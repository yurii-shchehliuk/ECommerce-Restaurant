version: '3.4'  
#attach to Docker 
services:  
    ##nginx proxy 
    reverseproxy:  
        build:  
            context: .  
            dockerfile: src/nginx/nginx.Dockerfile  
        ports:  
            - "5200:5200"
        depends_on:  
            - api.identity  
            - api.basket  
            - api.web  
        #networks: 
        #    owletnet: 
        #        aliases:
        #            - "id-local.owlet.com" 
        #            - "www-local.owlet.com" 
    ##API 
    api.identity:  
        image: ${DOCKER_REGISTRY-}apiidentity  
        build:  
            context: .  
            dockerfile: src/API.Identity/Dockerfile  
        environment:  
            - ASPNETCORE_URLS=http://*:80  
        ports: 
            - "5041:80" 
        depends_on: 
            - owletsql 
        networks: 
            - owletnet 
    api.basket:  
        image: ${DOCKER_REGISTRY-}apibasket  
        build:  
            context: .  
            dockerfile: src/API.Basket/Dockerfile  
        environment:  
            - ASPNETCORE_URLS=http://*:80 
        ports: 
            - "5031:80" 
        depends_on: 
            - owletsql 
        networks: 
            - owletnet 
    api.web:  
        image: ${DOCKER_REGISTRY-}apiweb  
        build:  
            context: .  
            dockerfile: src/API.Web/Dockerfile  
        environment:  
            - ASPNETCORE_URLS=http://*:80  
        ports: 
            - "5021:80" 
        networks: 
            - owletnet 
    ##sql database 
    owletsql: 
        container_name: sqlserver 
        image: mcr.microsoft.com/mssql/server:2019-latest 
        restart: always 
        ports: 
            - "1433:1433" 
        environment: 
            - "ACCEPT_EULA=Y"  
            - "SA_PASSWORD=P@ssw0rd" 
        volumes: 
            - sqldata:/var/opt/mssql 
        networks: 
            - owletnet 
##3rd services 
    ##basket's redis 
    redis:  
        image: redis:6.0.10-alpine
        ports:  
            - 6379:6379  
        command: ["redis-server", "--appendonly", "yes"]  
        restart: always 
        volumes:  
            - redis-data:/data  
        networks:  
            - owletnet  
    redis-commander:  
        image: rediscommander/redis-commander:latest  
        environment:  
            - REDIS_HOSTS=local:redis:6379  
            - ALLOW_EMPTY_PASSWORD=yes 
        ports:  
            - 8081:8081  
        networks:  
            - owletnet  
        depends_on:  
            - redis 
 
    #logging 
    owletseq: 
        image: datalust/seq 
        restart: unless-stopped 
        ports: 
             - "5342:80" 
        environment: 
              - ACCEPT_EULA=Y 
        networks: 
             - owletnet 
    #email smtp 
    owletsmtp: 
        image: rnwood/smtp4dev 
        restart: always 
        ports: 
          - "5010:80" 
        networks: 
          - owletnet 
    #message broker
    rabbitowlet:
        image: rabbitmq:3-management
        restart: always
        ports:
            - 8088:15672
volumes: 
    sqldata: 
    redis-data: 
networks: 
    owletnet: {}